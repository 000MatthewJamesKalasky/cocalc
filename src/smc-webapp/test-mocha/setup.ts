import * as $ from "jquery";
import { callback } from "awaiting";
import { startswith } from "frame-editors/generic/misc";

export async function mocha_run(path: string): Promise<void> {
  const w: any = window as any;
  w.mocha.setup("bdd");
  load_mocha_tests(path);
  $(".page-container").css("opacity", 0.3);
  try {
    await callback(w.mocha.run);
  } catch (failures) {
    console.log("testing - FAIL", failures);
  }
  console.log("testing - complete");
  $(".page-container").css("opacity", 0.1);
  $("#mocha").focus();
}

/* We have to hard code all the test files as below explicitly,
   due to how webpack and require works.  This will be autogenerated
   via a webpack plugin at some point. */
function load_mocha_tests(path: string): void {
  function f(test: string): boolean {
    return startswith(test, path);
  }
  if (f("frame-editors/markdown-editor/test/basic"))
    require("smc-webapp/frame-editors/markdown-editor/test/basic");
  if (f("frame-editors/markdown-editor/test/math"))
    require("smc-webapp/frame-editors/markdown-editor/test/math");
}

// make this a button click from the #mocha div.
function test_reset(): void {
  $("#mocha").empty();
  $(".page-container")
    .show()
    .css("opacity", 1);
}

(window as any).test_reset = test_reset;
