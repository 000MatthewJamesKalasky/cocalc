{"desc":"#1 #critical #f1\nInvoice download is broken!\n\nhttps://cloud.sagemath.com/invoice/sagemathcloud-william_a__stein-receipt-2016-03-28-in_17u1mGGbwvoRbeYxknzGboWn.pdf Failed to load resource: the server responded with a status of 504 (Gateway Time-out)\n\non web0 (didn't affect hsy, only me, possibly because new transaction done via stripe web ui):\n\n```\n/home/salvus/logs/hub1.log-4382549-2016-03-28T14:56:40.134Z - debug: Uncaught exception: Error: Stripe: I require argument \"id\", but I got: null\n/home/salvus/logs/hub1.log-4382550-2016-03-28T14:56:40.235Z - debug: Error: Stripe: I require argument \"id\", but I got: null\n/home/salvus/logs/hub1.log-4382551-  at Object.retrieve (/home/salvus/smc/src/smc-hub/node_modules/stripe/lib/StripeMethod.js:47:15)\n/home/salvus/logs/hub1.log-4382552-  at /home/salvus/smc/src/smc-hub/stripe-invoice.coffee:27:32\n/home/salvus/logs/hub1.log-4382553-  at /home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:713:13\n/home/salvus/logs/hub1.log-4382554-  at iterate (/home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:262:13)\n/home/salvus/logs/hub1.log-4382555-  at /home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:274:29\n/home/salvus/logs/hub1.log-4382556-  at /home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:44:16\n/home/salvus/logs/hub1.log-4382557-  at /home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:718:17\n/home/salvus/logs/hub1.log-4382558-  at /home/salvus/smc/src/smc-hub/node_modules/async/lib/async.js:167:37\n/home/salvus/logs/hub1.log-4382559-  at /home/salvus/smc/src/smc-hub/stripe-invoice.coffee:22:31\n/home/salvus/logs/hub1.log-4382560-  at [object Object]._onTimeout (/home/salvus/smc/src/smc-hub/node_modules/stripe/lib/StripeResource.js:87:34)\n/home/salvus/logs/hub1.log-4382561-  at tryOnTimeout (timers.js:224:11)\n/home/salvus/logs/hub1.log-4382562-  at Timer.listOnTimeout (timers.js:198:5)\n/home/salvus/logs/hub1.log-4382563-\n```","position":-1,"last_edited":1459202411256,"task_id":"caab1ee7-73bc-4ad8-a4e9-148c91895c1e","due_date":1459263487528}
{"desc":"#course #1\nThe \"(has never used project)\" column in courses is wrong.  It always says that no matter what.","position":0,"last_edited":1459202431962,"task_id":"5485acd0-7fce-4a6d-a056-fe98b887db8b"}
{"desc":"#0 (1:00?) (0:17) #now\nrecompact table\n\n> danielmewes: The idea is to do something like this `r.db(...).table(...).update({dummy: null}, {durability: \"soft\"})` followed by `r.db(...).table(...).update({dummy: r.literal()}, {durability: \"soft\"})` to remove the `dummy` field again.\n\nimplement a command in rethink.coffee to do recompact, with a limit argument so we don't kill things.  then run on blobs.","position":-2,"last_edited":1459225908437,"task_id":"c824875d-c49d-456c-958a-488233523262"}
{"desc":"#0 #sync (1:00?)\nmassive number of writes per second.\n\n> There is definitely some bug in the new sync code causing some clients to write a huge number of times to the patches table. Run query_stats on come web hubs instantly indicates this (by some huge set:n counts). So it will likely be easy to fix when I get time (probably tonight - definitely tomorrow). This will greatly reduce the db load from what it is now.","position":-1.5,"last_edited":1459220657290,"task_id":"75eca34a-dce2-49e4-ab97-17862833b87d"}