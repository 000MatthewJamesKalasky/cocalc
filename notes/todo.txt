
  [ ] completion issues:
       * galaxy tab 8.9 -- always gives first completion
       * keyboard vanishes on ios and android after selection

  [ ] refactor worksheet1 code to a new object oriented structure, now that it is clear, and enough is done.

  [ ] message when session times out, then restart it.... will happen only if user's browser is there!
  [ ] tab completion
      [x] page: determining where the cursor is
-     [x] page: putting the cursor back
      [ ] sage_server: decide which type of introspection to do
      [ ] sage_server: introspect completions
      [ ] sage_server: introspect docstring
      [ ] sage_server: introspect source code
      [ ] page: display all introspects as alert_message for now...

  [ ] tab completion optimization idea:
       - cache completions for identifier... until next execute

-------------------------------

  [ ] tab completion -- phase 2, after sorting out cell input editor
      [ ] page: display list of completions and choose one
      [ ] page: display a docstring (with Sphinx html formatting?)
      [ ] page: display source code
      [ ] page: dynamic syntax highlighting (given cursor control) ?
  [ ] @interact foundations
  [ ] mathjax
  [ ] plots -- display using this? http://modeln.github.com/sDashboard/
  [ ] sign out must clear scratch worksheet.

-----------------
   [ ] when editing input of cell, make entire output become light grey or something...?
  [ ] on mobile chrome (my phone) codemirror doesn't get a scrollbar (since there are no scrollbars) so there
      is no way to see an input cell that turns to scroll.  One option -- 
  [ ] on mobile, tooltips suck

  [ ] countdown session timer, with link to buy now.
  [ ] ability to use cursor keys to move between cells
      [ ] down arrow when on last line of compute moves to note
      [ ] down arrow on last line of note moves to next compute cell
      HOW to implement? 
          - if you hit arrow key and cursor does not move, then do DOM
            query to find next editable and put cursor there in the
            position it was at last time (recorded using data
            attribute?)
  [ ] auto-indent
  [ ] highlight and tab/shift-tab for indent: https://github.com/alanhogan/Tabby (?)
  [ ] move scratch worksheet to a project
  [ ] when pasting into input cell, turn into text first, e.g., &nbsp;'s get pasted in for spaces right now...  This is pretty bad.
  [ ] mode where hub kills any session without activity for xxx time...
  [ ] focus on a cell when switching to scratch worksheet page.
  [x] because of block breaking code in sage_server.py, this gives an error:
"for i in range(10):

   print i"

LATER:
  [ ] user personal data repository that is big/scaled/fast/query-able and public.
  [ ] only set highlighted to false on cell on change
  [ ] save state (open tab
  [ ] delete worksheet confirmation
  [ ] make worksheet1 (scratch worksheet) not do anything until user clicks an "i agree to terms of usage" checkbox;
      box does not come back so long as user local storage contains a worksheet.
  [ ] make button bar move on mobile device
  [ ] user customize syntax highlighting and other worksheet colors via a gui *or* edit css
  [ ] get salvus to work on ie (maybe just deal with console?)
  [ ] switch to using a keyboard handling library
  [ ] floating interrupt/evaluate control
  [ ] a good activity spinner to show when comp is running
  [ ] if use scratch worksheet, then login, the scratch worksheet session is of course no longer valid.  What to do?
  [ ] an execute message that pre-empts whatever was going
  [ ] Invalid password reset link should fail immediately.
  [ ] really need a proper notifications area where all notifications appear, etc.
  [ ] tooltip for footer is too far off to the right
  [ ] 3 times per minute -- maybe too much of a constraint?
  [ ] return doesn't close modal feedback
  [ ] sage server: priotorize active users
  [ ] load report when session starts, etc. -- user can see it.
  [ ] upsell: trial is slow (by x%), but click here for faster version

DONE:
   [x] CAN'T: force the keyboard to appear when clicking on edit cell on iOS ipad3.
  [x] splitting cells
  [x] modify worksheet1.coffee so the cells are codemirror cells, but otherwise it is the same
  [x] remove worksheet-cm from visibility
  [x] get rid of including Rainbow.
  [x] get rid of including htmlparse.
  [x] saving and loading scratch worksheet again:
[x] Define the JSON format --
{
 title:
 description:
 cells:[ {id:<uuid text>, note:<html>, input:<text>, output:{stdout:<html>, stderr:<html>}} ]
}
[x] function that serializes the scratch worksheet from DOM
[x] functions that loads serialized scratch worksheet into DOM


  [x] insert a new cell between existing cells
  [x] add paren matching
  [x] delete cell
  [x] paren matching -- there is an easy codemirror plugin

  [x] finish implementing dirty and clean for worksheet state.

  [x] worksheet1 keyboard shortcuts should only be active when
      that page is displayed, e.g., tabbing in sign in doesn't work.
  [x] save non-logged in user's scratch worksheet to cookie (?)
  [x] support using scratch worksheet *without* having to first login <--

  [x] make it so re-loaded scratch worksheet is *active*
  [x] save logged in user's scratch worksheet to database
  [x] add tooltips for the control buttons
  [x] Rainbow highlighter -- has a bug with triple quoted strings:
      - the regexp is wrong: correct version is /('{3}|"{3})[\s\S]*?\1/gm
        """[\s\S]*"""
  [x] bug -- extra space on highlight
  [x] ability to use cursor keys to move between compute cells

  [x] evaluating a large input cell takes a huge time to do nothing -- why?
      it turns out getting the plain text using the .text() method of rangy is *DOG SLOW*!
      What about that HTML parser I ditched?
      It is 10000 times faster than rangy for this!  W00t.  OK, I keep it.

  [x] kill/restart session
  [x] lame evaluate button / interrupt button (just at the top and bottom and nowhere else)
  [x] lame "running" indicator just to have something easy to implement
  [x] .html/text -- how to gets rid of newlines, html, etc... (but webkit doesn't) -- use https://github.com/tautologistics/node-htmlparser/



---


Todo list until the next Salvus release
----------------------------------------

  [x] implement the "Sign out" link
  [x] make the contents in the account settings page actually valid
  [x] Make the "forget your password" thing actually submit back to
      the server (just a few lines of code).  
  [x] Implement URL handler in node for resetting password (this is
      not done).
  [x] Remember me; persistent login cookie. 
  [x] the function sign_in in hub.coffee needs to have a sign in
      attempt delay like most of the other functions.  Have the delay be 1 s, 2 s, 3s, 5s, 5s, 5s, 5s, ...
 

Very high priority:

  [ ] tab completion

  [ ] a worksheet mode

Lower priority todo:

  [ ]  fix change email gui to use reason object for errors instead of hard coding them.

  [ ] should have an easy link to salvus terms in various places instead of *only* having it on account creation?

  [ ] make error message on sign-in right by the password, not using alert

  [ ] delete account

  [ ] maybe salvus totally broken on ie because of use of console.log ?

  [ ] after remember me is done, I may want to move from key:value
      store to another table so that when user changes their password,
      then all remember_me cookies for them are invalidated.

  [ ] enter to submit: login, change email, etc.

  [ ] saving settings on one client should push changes to all connected clients

  [ ] in demo1.coffee:
          code = system + ".eval(r'''" + code + "''')"  # TODO: this won't work when code contains ''' -- replace by a more sophisticated message to the backend server

  [ ] Save x amount of command line history for user on logout and
      periodically Restore on login.



