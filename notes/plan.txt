Viable overall plan for finishing the first beta release (which I can
charge for) by Dec 7.  This is 6 weeks.

TASKS
-----

[ ] (2 days) Admin UI
  - create a simple graphical web-based interface to some functionality in admin.py:
     - hosts (ping status, etc.)
     - services: start, stop, restart, etc. 
     - vm load; host load
     - results of monitoring

[ ] (2 days) Monitoring/testing
  - use nodejs_client.coffee to systematically test the nodejs websocket servers directly.  
  - use python or node http get to test nginx servers and stunnel
  - test cassandra from a python script (use cql)

[ ] (2 days) Missing Nodejs server features
  - support persistent sessions (easy?)
  - inter-nodejs communication via tcp

[ ] (3 days) User account creation
  - terms of usage
  - payment system
  - login via open id providers.

[ ] (4 days) Command line UI
  - bash-style prompt in the path of an extracted project, so can use git, etc. from command line 
  - can run sage?

[ ] (5 days) Very basic Sage worksheet documents
  - create cells
  - move cells
  - delete cells
  - tab completion
  - 2d graphics

[ ] (3 days) Tabbed document UI:
  - open document
  - close document
  - save document
  - simple editor for most file types for now

[ ] (4 days) Project management UI
  - create project
  - open project
  - organize list of projects

[ ] (4 days) Sharing UI
  - publish document in a version of project to a public short hashed URL
  - embedding published live document in an external website

[ ] (10 days for subset of this) Advanced Sage worksheet documents:
  - 3d graphics
  - help
  - interacts
  - json data structure (?)
  - mathjax2

PHASE 2
--------
[ ] Teaching UI
  - creating a group of student accounts for a particular course
  - making documents and projects available to students
  - homework documents with automated grading

[ ] Research UI
  - long running computations
  - large memory computations
  - massively parallel
