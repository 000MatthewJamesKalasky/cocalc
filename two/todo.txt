TODO:

 [ ] switch client server role for worker.py!

 [ ] properly spoof stdout/stderr.  This is done right in 
class SageSpoofOut(SageObject): that is in 
  http://trac.sagemath.org/sage_trac/attachment/ticket/12415/12415_inprogress.patch
 and I've copied to spoof.txt in this directory temporarily.

 [ ] write Frontend

      [ ] write frontend.py server (flask + SQLalchemy version)

          [x] design an extensible data model that is simple enough to implement but
              powerful enough to be interesting and later extend to full
          [x] implement sqlalchemy database, copying from my old frontend.py code
          [ ] design a client/server setup that works with the data model
          [ ] implement fronend server part of model a bit
          [ ] implement desktop client (not polished) a bit
          [ ] implement mobile client (not polished) a bit

      [ ] write static/sagews/desktop/frontend

      [ ] write static/sagews/mobile/frontend

 [ ] write Backend
  
      [ ] take a lot of code from ../backend2.py

 [ ] write ProcessSpawner

DONE:  
  
 [x] Test: get process.py to doctest (possibly explicitly from command line)

 [x] Test: create file test.py that:
      (1) when run with no args, runs all test suites
      (2) when run with args, tests only those modules

 [x] store process-port.pid file somewhere else.

