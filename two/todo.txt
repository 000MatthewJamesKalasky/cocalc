TODO:

 [ ] write Frontend

      [ ] write frontend.py server (flask + SQLalchemy version)

          [x] design an extensible data model that is simple enough to implement but
              powerful enough to be interesting and later extend to full
          [ ] implement sqlalchemy database, copying from my old frontend.py code
          [ ] design a client that works with the data model
          [ ] implement desktop client (not polished)
          [ ] implement mobile client (not polished)

      [ ] write static/sagews/desktop/frontend

      [ ] write static/sagews/mobile/frontend

 [ ] write Backend
  
      [ ] take a lot of code from ../backend2.py

 [ ] write ProcessSpawner

DONE:  
  
 [x] Test: get process.py to doctest (possibly explicitly from command line)

 [x] Test: create file test.py that:
      (1) when run with no args, runs all test suites
      (2) when run with args, tests only those modules

 [x] store process-port.pid file somewhere else.

